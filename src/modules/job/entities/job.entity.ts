import { Exclude } from 'class-transformer';
import { AbstractEntity } from 'src/common/abstract.entity';
import { JobStatus } from 'src/constants/status.enum';
import { Application } from 'src/modules/job/entities/application.entity';
import { User } from 'src/modules/user/entities/user.entity';
import { Column, Entity, Index, JoinColumn, ManyToOne, OneToMany } from 'typeorm';
import { JobSkill } from './job-skill.entity';

@Entity({ name: 'jobs' })
@Index('IDX_JOBS_STATUS_CREATEDAT', ['status', 'createdAt'])
@Index('IDX_JOBS_MIN_MAX_SALARY', ['minSalary', 'maxSalary'])
export class Job extends AbstractEntity {
  @Column({ type: 'int', nullable: false })
  postedBy: number;

  @Column({ type: 'text', nullable: false })
  title: string;

  @Column({ type: 'text', nullable: false })
  description: string;

  @Column({ type: 'varchar', nullable: false })
  location: string;

  @Column({ type: 'int', nullable: false })
  minSalary: number;

  @Column({ type: 'int', nullable: true })
  maxSalary?: number;

  @Column({ type: 'varchar', length: 20, nullable: false })
  status: JobStatus;

  // ❗ fts column is generated by DB, so it's excluded from insert/update
  @Exclude()
  @Column({ type: 'tsvector', select: false, nullable: true })
  fts?: unknown;

  @ManyToOne(() => User, { onDelete: 'CASCADE', onUpdate: 'CASCADE' })
  @JoinColumn({ name: 'postedBy' })
  poster: User;

  @OneToMany(() => JobSkill, (jobSkill) => jobSkill.job, { cascade: true })
  jobSkills: JobSkill[];

  @OneToMany(() => Application, (application) => application.job, { cascade: true })
  applications: Application[];
}
